[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 J. Bien Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/basic-example.html","id":"package-setup","dir":"Articles","previous_headings":"","what":"Package setup","title":"A Basic Example","text":"Note: Every R package needs DESCRIPTION file. ’ll start filling relevant information.","code":"usethis::create_package(   path = \".\",   fields = list(     Package = param$package_name,     Version = \"0.0.0.9000\",     Title = \"Fit Least Squares\",     Description = \"A package that fits least squares.\",     `Authors@R` = person(       given = \"First\",       family = \"Last\",       email = \"you@gmail.com\",       role = c(\"aut\", \"cre\")       )   ) ) usethis::use_mit_license(copyright_holder = \"F. Last\")"},{"path":"/articles/basic-example.html","id":"writing-a-function-for-the-package","dir":"Articles","previous_headings":"","what":"Writing a function for the package","title":"A Basic Example","text":"Since R markdown file, can use latex explain code, provide derivations, etc. Suppose response vector \\(y\\\\mathbb R^n\\) data matrix \\(X\\\\mathbb R^{n\\times p}\\). want find solution problem \\[ \\min_{\\beta\\\\mathbb R^p}\\|y-X\\beta\\|^2 \\] ’ll assume \\(X\\) full rank \\(n > p\\). know solution given \\[ \\hat\\beta=(X^TX)^{-1}X^Ty. \\] ’ll write function exactly ! Note: Code chunks whose first line starts #' added package. ’re familiar roxygen2, see . Now ’ve defined do_least_squares(), let’s try ! Note: code chunk start #', added package.  Let’s see compares lm’s answer. Compare … Ok, do_least_squares() appears working. Let’s define formal unit test based example . Note: Code chunks one lines starting test_that( testthat::test_that( added package tests.","code":"#' Get the OLS solution #'  #' @param y our response, which is an n-vector #' @param X our data matrix, which is n by p #' @export do_least_squares <- function(y, X) {   if(nrow(X) != length(y))     stop(\"The number of rows of X must match the length of y.\")   as.numeric(solve(crossprod(X), crossprod(X, y))) } set.seed(123) n <- 100 p <- 1 x <- cbind(1, matrix(rnorm(n*p), n, p)) beta_star <- c(2, 0.5) sigma <- 0.1 y <- x %*% beta_star + sigma * rnorm(n) betahat <- do_least_squares(y, x) plot(x[, 2], y) abline(betahat[1], betahat[2], col = 2, lwd=2) fit_lm <- lm(y ~ x[, 2]) fit_lm$coefficients ## (Intercept)      x[, 2]  ##   1.9897197   0.4947528 betahat ## [1] 1.9897197 0.4947528 testthat::test_that(\"do_least_squares() works\", {   set.seed(123)   n <- 100   p <- 1   x <- cbind(1, matrix(rnorm(n*p), n, p))   beta_star <- c(2, 0.5)   sigma <- 0.1   y <- x %*% beta_star + sigma * rnorm(n)   fit_lm <- lm(y ~ x[, 2])   # do lm and our function give the same coefficient vector?   testthat::expect_equal(do_least_squares(y, x),                          as.numeric(fit_lm$coefficients))   # do we get the desired error when there is a length mismatch?   testthat::expect_error(do_least_squares(y[-1], x), \"must match\") }) ## Test passed 🎊"},{"path":[]},{"path":"/articles/basic-example.html","id":"finer-control-over-where-in-the-package-your-code-is-sent","dir":"Articles","previous_headings":"Some fancier features","what":"Finer control over where in the package your code is sent","title":"A Basic Example","text":"noted , litr detects whether send code chunk package based whether starts #' test_that . However, sometimes ’ll want finer control. case can override behavior explicitly specifying target location. , use code chunk option form send_to=\"R/myfile.R\". add code particular file (either creating need else appending ). two primary use cases feature: () don’t want use roxygen2 document function (b) want several functions appear together .R file.","code":""},{"path":"/articles/basic-example.html","id":"using-a-function-from-a-different-package","dir":"Articles","previous_headings":"Some fancier features","what":"Using a function from a different package","title":"A Basic Example","text":"Imagine wanted actually use function another package . example, perhaps want use lsfit() stats package: also update DESCRIPTION file package dependence: use function another package, simply use pkg:: prefix calling add usethis::use_package(\"pkg\") include package dependency.","code":"#' Get the OLS solution using lsfit() #'  #' @param y our response, which is an n-vector #' @param X our data matrix, which is n by p #' @export do_least_squares_with_lsfit <- function(y, X) {   fit <- stats::lsfit(x = X, y = y, intercept = FALSE)   return(as.numeric(fit$coefficients)) } usethis::use_package(\"stats\")"},{"path":"/articles/basic-example.html","id":"including-a-dataset-in-your-package","dir":"Articles","previous_headings":"Some fancier features","what":"Including a dataset in your package","title":"A Basic Example","text":"’s template .","code":""},{"path":"/articles/basic-example.html","id":"using-rcpp-in-your-package","dir":"Articles","previous_headings":"Some fancier features","what":"Using Rcpp in your package","title":"A Basic Example","text":"’s template .","code":""},{"path":"/articles/basic-example.html","id":"including-a-readme-vignettes-and-pkgdown-site","dir":"Articles","previous_headings":"Some fancier features","what":"Including a README, vignettes, and pkgdown site","title":"A Basic Example","text":"’s template .","code":""},{"path":"/articles/basic-example.html","id":"defining-your-package-with-bookdown","dir":"Articles","previous_headings":"Some fancier features","what":"Defining your package with bookdown","title":"A Basic Example","text":"’re writing large package, may convenient define across multiple .Rmd files. can use bookdown , leads nice looking online book multiple chapters. ’s template .","code":""},{"path":"/articles/basic-example.html","id":"documenting-the-package","dir":"Articles","previous_headings":"","what":"Documenting the package","title":"A Basic Example","text":"finish running commands turn royxgen2 traditional documentation files R package.","code":"litr::document() # <-- use instead of devtools::document()"},{"path":"/articles/faqs.html","id":"does-all-code-in-the--rmd-end-up-in-the-r-package","dir":"Articles","previous_headings":"","what":"Does all code in the .Rmd end up in the R package?","title":"FAQs","text":", code chunk sent R/ file R package starts #'. testthat::test_that() used code chunk, chunk added package unit test. example , see create-rhello.Rmd resulting package. want code chunk sent R package doesn’t start roxygen2-style #', can instead add explicit location go using chunk option form send_to=\"R/myfile.R\". can send code multiple code chunks file like.","code":""},{"path":"/articles/faqs.html","id":"do-i-have-to-learn-special-syntax-to-use-litr","dir":"Articles","previous_headings":"","what":"Do I have to learn special syntax to use litr?","title":"FAQs","text":". .Rmd file generates R package litr uses exactly syntax regular .Rmd file. need use roxygen2 documenting functions; however, probably using roxygen2 even weren’t using litr.","code":""},{"path":"/articles/faqs.html","id":"how-does-the-litr--rmd-relate-to-a-vignette","dir":"Articles","previous_headings":"","what":"How does the litr .Rmd relate to a vignette?","title":"FAQs","text":"vignette serves different purpose .Rmd file use litr. goal vignette show potential users package can use . contrast, litr .Rmd file document source code, presented way optimized human readability. audience file future self anyone may eventually wish modify R package understand inner workings. Typical users package need see document.","code":""},{"path":"/articles/faqs.html","id":"for-large-packages-can-i-write-my-package-across-multiple--rmd-files","dir":"Articles","previous_headings":"","what":"For large packages, can I write my package across multiple .Rmd files?","title":"FAQs","text":"Yes! can use bookdown define R package across multiple .Rmd files. leads nice looking online book multiple chapters. render book .Rmd files run single environment, behaves way one enormous .Rmd file. ’s example. easiest way get started work template called make--r-package--bookdown.","code":""},{"path":"/articles/faqs.html","id":"can-i-include-a-readme-for-my-package","dir":"Articles","previous_headings":"","what":"Can I include a README for my package?","title":"FAQs","text":"Yes! can using function litr::add_readme(). See template create-withpkgdown.Rmd example works.","code":""},{"path":"/articles/faqs.html","id":"can-i-include-vignettes-in-my-package","dir":"Articles","previous_headings":"","what":"Can I include vignettes in my package?","title":"FAQs","text":"Yes! can using function litr::add_vignettes(). See template create-withpkgdown.Rmd example works.","code":""},{"path":"/articles/faqs.html","id":"can-i-make-a-pkgdown-site-for-my-package","dir":"Articles","previous_headings":"","what":"Can I make a pkgdown site for my package?","title":"FAQs","text":"Yes! See template create-withpkgdown.Rmd example works.","code":""},{"path":"/articles/faqs.html","id":"is-it-true-that-literate-programming-won-an-academy-award","dir":"Articles","previous_headings":"","what":"Is it true that literate programming won an Academy Award?","title":"FAQs","text":"Almost, quite. Donald Knuth personally thanked Academy Award acceptance speech developing literate programming. See Kristen Bell Michael B. Jordan clapping literate programming .","code":""},{"path":"/articles/faqs.html","id":"did-you-use-litr-to-write-litr","dir":"Articles","previous_headings":"","what":"Did you use litr to write litr?","title":"FAQs","text":"Yes! Version 0.0.1 litr written traditional way (since litr didn’t yet exist…). thereafter, version n+1 litr written using version n litr. creation litr, see . ’re really interested, look create-litr.Rmd.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jacob Bien. Author, maintainer. Patrick Vossler. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bien J, Patrick Vossler (2023). litr: Literate Programming Writing R Packages. R package version 0.7.0, https://github.com/jacobbien/litr-project/tree/main/litr.","code":"@Manual{,   title = {litr: Literate Programming for Writing R Packages},   author = {Jacob Bien and {Patrick Vossler}},   year = {2023},   note = {R package version 0.7.0},   url = {https://github.com/jacobbien/litr-project/tree/main/litr}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Literate Programming for Writing R Packages","text":"litr R package lets write complete R package single R markdown document. enables workflow writing R packages probably different used . litr, knitting creates R package addition .html file.","code":""},{"path":"/index.html","id":"why-write-r-packages-in-this-way","dir":"","previous_headings":"","what":"Why write R packages in this way?","title":"Literate Programming for Writing R Packages","text":"Using litr brings benefits R markdown package development: Record explain every step making R package others can understand every detail years later. Present functions package logical order maximizes human readability. Include derivations latex right next code ends package. Include figures alongside code help explanation. Define unit tests relevant context, .e. directly defining function tested. Furthermore, writing R package actually easier litr without . Just choose one R package templates press “Knit” – ’ll working R package can modify.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Literate Programming for Writing R Packages","text":"can install latest release litr github following: latest development version, remove @*release .","code":"remotes::install_github(\"jacobbien/litr-project@*release\", subdir = \"litr\")"},{"path":"/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Literate Programming for Writing R Packages","text":"Using template best way get started: creates R markdown file called create-rhello.Rmd demonstrates literate programming workflow writing R package. particular, knit create-rhello.Rmd, creates tiny example R package called rhello one function one test function. knit, can either press “Knit” RStudio use following command: creates R package! Now can modify template design package. explore kinds R packages, using Rcpp, see templates page. Also, see section packages wild use litr.","code":"rmarkdown::draft(\"create-rhello.Rmd\", template = \"make-an-r-package\", package = \"litr\") litr::render(\"create-rhello.Rmd\")"},{"path":"/index.html","id":"more-background","dir":"","previous_headings":"","what":"More background","title":"Literate Programming for Writing R Packages","text":"try understand code R package, logic functions relate often obvious. including function documentation, vignettes, unit tests best practices, convey chain logic mind programmer went writing different functions. can difficult know look functions within even well-documented R package. fact functions appear different files functions within files can defined arbitrary order makes unclear approach reading code. Furthermore, tests stored different place functions , making tests harder read. resolved single document goes code tests linear, logical fashion. Rather try construct document fact, idea litr make document actual source code package. R package created act knitting document. want modify anything package, modifying document re-knitting. motivation literate programming, introduced Donald Knuth, direct inspiration fast.ai’s nbdev, available Python. litr package relies heavily number great tools R, especially knitr, rmarkdown, usethis, devtools, testthat. also note Yihui Xie post demonstrates similar idea, although approach appears proof concept. can hear Jeremy Howard Hugo Bowne-Anderson talk literate programming nbdev Vanishing Gradients podcast. discussion inspired litr!","code":""},{"path":"/reference/add_chunk_label_hyperlinks.html","id":null,"dir":"Reference","previous_headings":"","what":"Add hyperlinks to embedded chunks — add_chunk_label_hyperlinks","title":"Add hyperlinks to embedded chunks — add_chunk_label_hyperlinks","text":"Finds chunks referenced html file(s) looking comments form ###\"foo\"### wraps foo span tag id=\"foo\" whenever chunk label <<foo>> found wraps href=\"file.html#foo\" tag hyperlink foo's definition.","code":""},{"path":"/reference/add_chunk_label_hyperlinks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add hyperlinks to embedded chunks — add_chunk_label_hyperlinks","text":"","code":"add_chunk_label_hyperlinks(   html_files,   reference_start = \"&lt;&lt;\",   reference_end = \"&gt;&gt;\" )"},{"path":"/reference/add_chunk_label_hyperlinks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add hyperlinks to embedded chunks — add_chunk_label_hyperlinks","text":"html_files Character vector file names html files created Rmd files reference_start delimiter used indicate start chunk label reference_end delimiter used indicate end chunk label","code":""},{"path":"/reference/add_function_hyperlinks.html","id":null,"dir":"Reference","previous_headings":"","what":"Add hyperlinks to function definitions — add_function_hyperlinks","title":"Add hyperlinks to function definitions — add_function_hyperlinks","text":"Finds functions defined html file(s) looking text form foo <- function( wraps foo span tag id=\"foo\" whenever foo found wraps href=\"file.html#foo\" tag hyperlink foo's definition.","code":""},{"path":"/reference/add_function_hyperlinks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add hyperlinks to function definitions — add_function_hyperlinks","text":"","code":"add_function_hyperlinks(html_files, pkg_name)"},{"path":"/reference/add_function_hyperlinks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add hyperlinks to function definitions — add_function_hyperlinks","text":"html_files Character vector file names html files created Rmd files pkg_name Name package created litr. Taken YAML front matter","code":""},{"path":"/reference/add_hex_sticker.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a hex sticker to package — add_hex_sticker","title":"Add a hex sticker to package — add_hex_sticker","text":"addition calling function, add README.Rmd something like :","code":""},{"path":"/reference/add_hex_sticker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a hex sticker to package — add_hex_sticker","text":"","code":"add_hex_sticker(hex_png_file)"},{"path":"/reference/add_hex_sticker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a hex sticker to package — add_hex_sticker","text":"hex_png_file .png file package's hex sticker","code":""},{"path":"/reference/add_hex_sticker.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a hex sticker to package — add_hex_sticker","text":"# -title <img src=\"man/figures/logo.png\" align=\"right\" height=\"139\" /> See .","code":""},{"path":"/reference/add_pkgdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a pkgdown site — add_pkgdown","title":"Add a pkgdown site — add_pkgdown","text":"function creates website package.  can see locally opening docs/index.html package.  get online can copy docs directory website's server.","code":""},{"path":"/reference/add_pkgdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a pkgdown site — add_pkgdown","text":"","code":"add_pkgdown(config_path = NULL)"},{"path":"/reference/add_pkgdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a pkgdown site — add_pkgdown","text":"config_path _pkgdown.yml file lives somewhere outside package.  NULL, basic default used.","code":""},{"path":"/reference/add_pkgdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a pkgdown site — add_pkgdown","text":"sure generating .Rmd file called litr::document() called.  customize site, may pass customized _pkgdown.yml file described pkgdown vignette.","code":""},{"path":"/reference/add_readme.html","id":null,"dir":"Reference","previous_headings":"","what":"Add README to package — add_readme","title":"Add README to package — add_readme","text":"function takes README.Rmd file, copies package, renders README.md file.  also adds two files .Rbuildignore.","code":""},{"path":"/reference/add_readme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add README to package — add_readme","text":"","code":"add_readme(rmd_file)"},{"path":"/reference/add_readme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add README to package — add_readme","text":"rmd_file path .Rmd file.","code":""},{"path":"/reference/add_text_to_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Some Text to a File — add_text_to_file","title":"Add Some Text to a File — add_text_to_file","text":"text added file particular line specified location.  first line txt line location modified file.  location NULL, text added end file. file exist, created location ignored (unless req_exist TRUE, case error thrown).","code":""},{"path":"/reference/add_text_to_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Some Text to a File — add_text_to_file","text":"","code":"add_text_to_file(   txt,   filename,   location = NULL,   req_exist = FALSE,   pad = FALSE )"},{"path":"/reference/add_text_to_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Some Text to a File — add_text_to_file","text":"txt Character vector add file filename Name file location Specifies text added. See description . req_exist TRUE, throws error file exist pad TRUE, text added preexisting file, adds newline","code":""},{"path":"/reference/add_vignettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add one or more vignettes to package — add_vignettes","title":"Add one or more vignettes to package — add_vignettes","text":"Add one vignettes package","code":""},{"path":"/reference/add_vignettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add one or more vignettes to package — add_vignettes","text":"","code":"add_vignettes(rmd_files)"},{"path":"/reference/add_vignettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add one or more vignettes to package — add_vignettes","text":"rmd_files character vector .Rmd files, corresponding vignette","code":""},{"path":"/reference/check_unedited.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if package directory is the unedited output of litr::render() — check_unedited","title":"Check if package directory is the unedited output of litr::render() — check_unedited","text":"Uses hash stored special litr field DESCRIPTION file check current state R package directory identical state time created litr::render().","code":""},{"path":"/reference/check_unedited.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if package directory is the unedited output of litr::render() — check_unedited","text":"","code":"check_unedited(package_dir)"},{"path":"/reference/check_unedited.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if package directory is the unedited output of litr::render() — check_unedited","text":"package_dir Path package","code":""},{"path":"/reference/description_litr_hash_field_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate litr hash field name for DESCRIPTION file — description_litr_hash_field_name","title":"Generate litr hash field name for DESCRIPTION file — description_litr_hash_field_name","text":"Generate litr hash field name DESCRIPTION file","code":""},{"path":"/reference/description_litr_hash_field_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate litr hash field name for DESCRIPTION file — description_litr_hash_field_name","text":"","code":"description_litr_hash_field_name()"},{"path":"/reference/description_litr_version_field_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate litr version field name for DESCRIPTION file — description_litr_version_field_name","title":"Generate litr version field name for DESCRIPTION file — description_litr_version_field_name","text":"Generate litr version field name DESCRIPTION file","code":""},{"path":"/reference/description_litr_version_field_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate litr version field name for DESCRIPTION file — description_litr_version_field_name","text":"","code":"description_litr_version_field_name()"},{"path":"/reference/do_not_edit_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate do-not-edit message to put at top of file — do_not_edit_message","title":"Generate do-not-edit message to put at top of file — do_not_edit_message","text":"Generate --edit message put top file","code":""},{"path":"/reference/do_not_edit_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate do-not-edit message to put at top of file — do_not_edit_message","text":"","code":"do_not_edit_message(rmd_file, type = c(\"R\", \"man\", \"c\"))"},{"path":"/reference/do_not_edit_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate do-not-edit message to put at top of file — do_not_edit_message","text":"rmd_file Name Rmd file mention type Whether R/ file, man/ file, c file","code":""},{"path":"/reference/document.html","id":null,"dir":"Reference","previous_headings":"","what":"Use roxygen to document a package — document","title":"Use roxygen to document a package — document","text":"wrapper devtools::document() function, turn wrapper roxygen2::roxygenize() function.  purpose litr wrapper make one modification.  particular, line outputted Rd files say \"Please edit documentation R/file.R\" instead refer Rmd file generates everything.","code":""},{"path":"/reference/document.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use roxygen to document a package — document","text":"","code":"document(...)"},{"path":"/reference/document.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use roxygen to document a package — document","text":"... Arguments passed devtools::document()","code":""},{"path":"/reference/find_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a .Rmd chunk label in a code chunk — find_labels","title":"Find a .Rmd chunk label in a code chunk — find_labels","text":"Find .Rmd chunk label code chunk","code":""},{"path":"/reference/find_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a .Rmd chunk label in a code chunk — find_labels","text":"","code":"find_labels(chunk_code)"},{"path":"/reference/find_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a .Rmd chunk label in a code chunk — find_labels","text":"chunk_code Character vector code .Rmd code chunk. element line code chunk.","code":""},{"path":"/reference/find_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a .Rmd chunk label in a code chunk — find_labels","text":"List chunk_idx logical vector line chunk corresponding whether chunk label form <<label>> found chunk_ids character vector chunk label found chunk.","code":""},{"path":"/reference/get_package_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Get package directory — get_package_directory","title":"Get package directory — get_package_directory","text":"Get package directory","code":""},{"path":"/reference/get_package_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get package directory — get_package_directory","text":"","code":"get_package_directory(package_parent_dir, package_name, input)"},{"path":"/reference/get_package_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get package directory — get_package_directory","text":"package_parent_dir directory package go (relative input directory) package_name name package input file name input","code":""},{"path":"/reference/get_params_used.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameter values used in rendering — get_params_used","title":"Get parameter values used in rendering — get_params_used","text":"params argument rmarkdown::render() explicitly used, overrides default appears input.","code":""},{"path":"/reference/get_params_used.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameter values used in rendering — get_params_used","text":"","code":"get_params_used(input, passed_params)"},{"path":"/reference/get_params_used.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameter values used in rendering — get_params_used","text":"input input file rendered (see rmarkdown::render) passed_params list parameters passed render.","code":""},{"path":"/reference/hash_package_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Hash package directory — hash_package_directory","title":"Hash package directory — hash_package_directory","text":"Gets identifier can used uniquely (whp) identify current state package. formed ignoring LitrId field DESCRIPTION file, location output function stored litr::render generates package.","code":""},{"path":"/reference/hash_package_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hash package directory — hash_package_directory","text":"","code":"hash_package_directory(package_dir)"},{"path":"/reference/hash_package_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hash package directory — hash_package_directory","text":"package_dir Path package","code":""},{"path":"/reference/insert_hrefs.html","id":null,"dir":"Reference","previous_headings":"","what":"Add hyperlinks to function definitions — insert_hrefs","title":"Add hyperlinks to function definitions — insert_hrefs","text":"Finds functions defined html file(s) looking text form foo <- function( wraps foo span tag id=\"foo\" whenever foo found wraps href=\"file.html#foo\" tag hyperlink foo's definition.","code":""},{"path":"/reference/insert_hrefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add hyperlinks to function definitions — insert_hrefs","text":"","code":"insert_hrefs(   txt,   function_pattern,   where_defined,   all_function_names,   pkg_name,   remove_span = FALSE )"},{"path":"/reference/insert_hrefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add hyperlinks to function definitions — insert_hrefs","text":"pkg_name Name package created litr. Taken YAML front matter","code":""},{"path":"/reference/litr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Literate Programming for Writing R Packages — litr-package","title":"Literate Programming for Writing R Packages — litr-package","text":"Allows one fully create R package single .Rmd file.  Includes functionality .Rmd templates literate programming approach R package development.","code":""},{"path":[]},{"path":"/reference/litr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Literate Programming for Writing R Packages — litr-package","text":"Maintainer: Jacob Bien jbien@usc.edu Authors: Patrick Vossler","code":""},{"path":"/reference/litr-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Literate Programming for Writing R Packages — litr-package","text":"","code":"# Make a file create-rhello.Rmd based on a template if (FALSE) { rmarkdown::draft(\"create-rhello.Rmd\",                   template = \"make-an-r-package\",                  package = \"litr\",                  edit = FALSE) # Now call litr::render (or press Knit if in RStudio) to generate not just # create-rhello.html, but also an R package called `rhello`. litr::render(\"create-rhello.Rmd\") }"},{"path":"/reference/litr_gitbook.html","id":null,"dir":"Reference","previous_headings":"","what":"litr version of bookdown::gitbook() — litr_gitbook","title":"litr version of bookdown::gitbook() — litr_gitbook","text":"behaves like bookdown::gitbook() differences: creates R package. adds hyperlinks function definitions whenever function used elsewhere document. \"Knuth-style\" chunk referencing hyperlinks.","code":""},{"path":"/reference/litr_gitbook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"litr version of bookdown::gitbook() — litr_gitbook","text":"","code":"litr_gitbook(...)"},{"path":"/reference/litr_gitbook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"litr version of bookdown::gitbook() — litr_gitbook","text":"... Parameters passed bookdown::gitbook()","code":""},{"path":"/reference/litr_html_document.html","id":null,"dir":"Reference","previous_headings":"","what":"litr version of rmarkdown::html_document() — litr_html_document","title":"litr version of rmarkdown::html_document() — litr_html_document","text":"behaves like rmarkdown::html_document() differences: creates R package. adds hyperlinks function definitions whenever function used elsewhere document. \"Knuth-style\" chunk referencing hyperlinks.","code":""},{"path":"/reference/litr_html_document.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"litr version of rmarkdown::html_document() — litr_html_document","text":"","code":"litr_html_document(...)"},{"path":"/reference/litr_html_document.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"litr version of rmarkdown::html_document() — litr_html_document","text":"... Parameters passed rmarkdown::pdf_document()","code":""},{"path":"/reference/litr_pdf_document.html","id":null,"dir":"Reference","previous_headings":"","what":"litr version of rmarkdown::pdf_document() — litr_pdf_document","title":"litr version of rmarkdown::pdf_document() — litr_pdf_document","text":"behaves exactly like rmarkdown::pdf_document() except creates R package.","code":""},{"path":"/reference/litr_pdf_document.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"litr version of rmarkdown::pdf_document() — litr_pdf_document","text":"","code":"litr_pdf_document(...)"},{"path":"/reference/litr_pdf_document.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"litr version of rmarkdown::pdf_document() — litr_pdf_document","text":"... Parameters passed rmarkdown::pdf_document()","code":""},{"path":"/reference/litrify_output_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify an existing output format to have litr behavior — litrify_output_format","title":"Modify an existing output format to have litr behavior — litrify_output_format","text":"function modifies pre_knit() post_processor() functions preexisting output format litr behavior (meaning R package created rmarkdown::render() called).","code":""},{"path":"/reference/litrify_output_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify an existing output format to have litr behavior — litrify_output_format","text":"","code":"litrify_output_format(base_format = rmarkdown::html_document)"},{"path":"/reference/litrify_output_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify an existing output format to have litr behavior — litrify_output_format","text":"base_format preexisting, non-litr output format rmarkdown::html_document","code":""},{"path":"/reference/make_noticeable.html","id":null,"dir":"Reference","previous_headings":"","what":"Make error messages noticeable — make_noticeable","title":"Make error messages noticeable — make_noticeable","text":"Since litr error messages amid lot output knitting, like litr ones eye-catching.","code":""},{"path":"/reference/make_noticeable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make error messages noticeable — make_noticeable","text":"","code":"make_noticeable(msg)"},{"path":"/reference/make_noticeable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make error messages noticeable — make_noticeable","text":"msg Error message","code":""},{"path":"/reference/read_hash_from_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the hash of the package from the DESCRIPTION file — read_hash_from_description","title":"Get the hash of the package from the DESCRIPTION file — read_hash_from_description","text":"Get hash package DESCRIPTION file","code":""},{"path":"/reference/read_hash_from_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the hash of the package from the DESCRIPTION file — read_hash_from_description","text":"","code":"read_hash_from_description(package_dir)"},{"path":"/reference/read_hash_from_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the hash of the package from the DESCRIPTION file — read_hash_from_description","text":"package_dir Path package","code":""},{"path":"/reference/render.html","id":null,"dir":"Reference","previous_headings":"","what":"Render R markdown file — render","title":"Render R markdown file — render","text":"Wrapper rmarkdown::render() produces R package output addition standard output document.  post-processing html file output.  particular, html file among outputs, adds hyperlinks functions defined within file make easier someone reading code see different functions defined.","code":""},{"path":"/reference/render.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render R markdown file — render","text":"","code":"render(input, ...)"},{"path":"/reference/render.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render R markdown file — render","text":"input input file rendered (see rmarkdown::render) ... Additional parameters pass rmarkdown::render","code":""},{"path":"/reference/send_to_package.html","id":null,"dir":"Reference","previous_headings":"","what":"A knitr chunk hook for writing R code and tests — send_to_package","title":"A knitr chunk hook for writing R code and tests — send_to_package","text":"chunk hook detects whether chunk defining function dataset included R package (looks roxygen2 comment format #' ). , written R/ directory.  also looks chunks one lines start test_that( testthat::test_that( (potentially leading whitespace).  chunks written tests directory R package.","code":""},{"path":"/reference/send_to_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A knitr chunk hook for writing R code and tests — send_to_package","text":"","code":"send_to_package(before, options, envir)"},{"path":"/reference/send_to_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A knitr chunk hook for writing R code and tests — send_to_package","text":"Indicates whether called chunk code executed options information chunk envir Environment","code":""},{"path":"/reference/send_to_package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A knitr chunk hook for writing R code and tests — send_to_package","text":"send_to option used, chunk hook instead simply writes code chunk file specified.","code":""},{"path":"/reference/setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Code for setup chunk — setup","title":"Code for setup chunk — setup","text":"Creates directory package . (Deletes currently long appears created litr subsequent manual edits.) Sets root directory directory Sets main chunk hook litr::send_to_package() sends code R package directory. Deactivates internal function usethis package Redefines document output hook handle chunk references differently Sets custom language engine called package_doc creates package documentation file inserts whatever user puts chunk.","code":""},{"path":"/reference/setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code for setup chunk — setup","text":"","code":"setup(package_dir)"},{"path":"/reference/setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code for setup chunk — setup","text":"package_dir Directory R package created","code":""},{"path":"/reference/test_litr.html","id":null,"dir":"Reference","previous_headings":"","what":"Run tests for litr itself — test_litr","title":"Run tests for litr itself — test_litr","text":"Special function testing litr.  trick temporarily install new version litr, run test, put things back .","code":""},{"path":"/reference/test_litr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run tests for litr itself — test_litr","text":"","code":"test_litr(install_old, location_of_new)"},{"path":"/reference/test_litr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run tests for litr itself — test_litr","text":"install_old function run install old version location_of_new Path new package directory","code":""},{"path":"/reference/test_litr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run tests for litr itself — test_litr","text":"Typical values install_old function() devtools::install(\"[location old version]\") function() remotes::install_github(\"jacobbien/litr-project@*release\", subdir = \"litr\").","code":""},{"path":"/reference/with_cleanup.html","id":null,"dir":"Reference","previous_headings":"","what":"Add litr hash to DESCRIPTION file if error encountered — with_cleanup","title":"Add litr hash to DESCRIPTION file if error encountered — with_cleanup","text":"creates function calls passed function within context try-catch.  error encountered, litr hash still added DESCRIPTION file future calls litr::render() recognize can safely overwrite package directory (.e., manual editing occurred).","code":""},{"path":"/reference/with_cleanup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add litr hash to DESCRIPTION file if error encountered — with_cleanup","text":"","code":"with_cleanup(fun, package_dir)"},{"path":"/reference/with_cleanup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add litr hash to DESCRIPTION file if error encountered — with_cleanup","text":"fun function called package_dir directory package written ... arguments passed fun","code":""},{"path":"/reference/write_hash_to_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the hash of the package to the DESCRIPTION file — write_hash_to_description","title":"Write the hash of the package to the DESCRIPTION file — write_hash_to_description","text":"Write hash package DESCRIPTION file","code":""},{"path":"/reference/write_hash_to_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the hash of the package to the DESCRIPTION file — write_hash_to_description","text":"","code":"write_hash_to_description(package_dir)"},{"path":"/reference/write_hash_to_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the hash of the package to the DESCRIPTION file — write_hash_to_description","text":"package_dir Path package","code":""},{"path":"/reference/write_version_to_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the version of litr used to the DESCRIPTION file — write_version_to_description","title":"Write the version of litr used to the DESCRIPTION file — write_version_to_description","text":"Write version litr used DESCRIPTION file","code":""},{"path":"/reference/write_version_to_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the version of litr used to the DESCRIPTION file — write_version_to_description","text":"","code":"write_version_to_description(package_dir)"},{"path":"/reference/write_version_to_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the version of litr used to the DESCRIPTION file — write_version_to_description","text":"package_dir Path package","code":""}]
